name: CMake
on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.14.0
        platform: 
          - gcc_64
          - android
          - wasm_32
          - msvc2017_64
          - msvc2017
          - winrt_x64_msvc2017
          - winrt_x86_msvc2017
          - mingw73_64
          - mingw73_32
          - clang_64
          - ios

        include: 
          - platform: gcc_64
            os: ubuntu-latest
          - platform: android
            os: ubuntu-latest
          - platform: wasm_32
            os: ubuntu-latest
            emsdk: sdk-fastcomp-1.38.27-64bit
          - platform: msvc2017_64
            os: windows-latest
          - platform: msvc2017
            os: windows-latest
          - platform: winrt_x64_msvc2017
            os: windows-latest
          - platform: winrt_x86_msvc2017
            os: windows-latest
          - platform: mingw73_64
            os: windows-latest
          - platform: mingw73_32
            os: windows-latest
          - platform: clang_64
            os: macos-latest
          - platform: ios
            os: macos-latest

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - uses: actions/setup-python@v1
      - name: actions/cache emsdk
        uses: actions/cache@v1
        if: matrix.platform == 'wasm_32'
        with:
          path: emsdk-cache
          key: ${{runner.os}}-emsdk-${{matrix.emsdk}}
      - uses: mymindstorm/setup-emsdk@v3
        if: matrix.platform == 'wasm_32'
        with:
          version: ${{matrix.emsdk}}
          actions-cache-folder: emsdk-cache
      - uses: Skycoder42/action-setup-qt@qt-direct 
        id: qt
        with:
          version: ${{matrix.version}}
          platform: ${{matrix.platform}}
          packages: "qtnetworkauth,qt.tools.ifw.32,skycoder42.service"
          flat-sources: "https://install.skycoder42.de/qtmodules/"
      - name: qmake stats
        run: qmake -query
        
      - name: qmake hello-world
        run: qmake
        working-directory: hello-world
      - name: make hello-world
        run: ${{steps.qt.outputs.make}}
        working-directory: hello-world
      - name: test hello-world
        if: steps.qt.outputs.tests == 'true' && matrix.platform != 'mingw73_64' && matrix.platform != 'mingw73_32'
        run: ${{steps.qt.outputs.make}} test
        working-directory: hello-world
        
      - name: qmake QtJsonSerializer
        run:  |
          qmake CONFIG+=install_ok QT_PLATFORM=${{matrix.platform}}
          ${{steps.qt.outputs.make}} qmake_all 
        working-directory: QtJsonSerializer
      - name: make QtJsonSerializer
        run: |
          ${{steps.qt.outputs.make}}
          ${{steps.qt.outputs.make}} INSTALL_ROOT="${{steps.qt.outputs.installdir}}" install
        working-directory: QtJsonSerializer
      - name: test QtJsonSerializer
        if: steps.qt.outputs.tests == 'true'
        run: |
          ${{steps.qt.outputs.make}} all
          ${{steps.qt.outputs.make}} ${{steps.qt.outputs.testflags}} run-tests
        working-directory: QtJsonSerializer
